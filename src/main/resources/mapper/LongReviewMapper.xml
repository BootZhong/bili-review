<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.zfg.learn.dao.LongReviewMapper">
    <resultMap id="LongReview" type="com.zfg.learn.model.po.LongReview">
        <id property="review_id" column="review_id"></id>
        <result property="article_id" column="article_id"></result>
        <result property="content" column="content"></result>
        <result property="ctime" column="ctime"></result>
        <result property="media_id" column="media_id"></result>
        <result property="mid" column="mid"></result>
        <result property="mtime" column="mtime"></result>
        <result property="progress" column="progress"></result>
        <result property="score" column="score"></result>
        <result property="title" column="title"></result>
        <result property="url" column="url"></result>
        <association property="author" javaType="com.zfg.learn.model.po.BiliUser">
            <id property="mid" column="mid"></id>
            <result property="avatar" column="avatar"></result>
            <result property="uname" column="uname"></result>
        </association>
        <association property="stat" javaType="com.zfg.learn.model.po.Stat">
            <result property="likes" column="likes"></result>
            <result property="reply" column="reply"></result>
        </association>
    </resultMap>


    <!--取代pagehelper自带的性能低下的查询语句-->
    <select id="selectReviewByMedia_id_COUNT" resultType="Long">
        select count(*)from longreview
        where longreview.media_id = #{media_id}
        <if test="score != null">
            and longreview.score = #{score}
        </if>
    </select>

    <select id="selectReviewByMedia_id" resultMap="LongReview">
        select longreview.*, bili_user.*, stat.likes, stat.reply  from longreview, bili_user, stat
        where bili_user.mid = longreview.mid
        and stat.article_id = longreview.article_id
        and longreview.media_id = #{media_id}
        <if test="score != null">
            and longreview.score = #{score}
        </if>
        <if test="sortType != null">
            <if test="sortType == 'stat.LIKES DESC' ">
                and stat.likes > 50
            </if>
            order by ${sortType}
        </if>
    </select>

    <select id="selectReviewByKeyWord" resultMap="LongReview">
        <bind name="keyword" value="'%'+keyword+'%'"/>
        select *from longreview, bili_user, stat
        where bili_user.mid = longreview.mid
        and stat.article_id = longreview.article_id
        and longreview.media_id = #{media_id}
        <if test="score != null">
            and longreview.score = #{score}
        </if>
        <if test="keyword != null">
            and(
                longreview.content like #{keyword}
                or longreview.title like #{keyword}
                )
        </if>
        <if test="sortType != null">
            <if test="sortType == 'stat.LIKES DESC' ">
                and stat.likes > 50
            </if>
            order by ${sortType}
        </if>
    </select>

    <select id="selectReviewByMid" resultMap="LongReview">
        select *from longreview, bili_user, stat
        where bili_user.mid = longreview.mid
        and stat.article_id = longreview.article_id
        <if test="mid != null">
           and longreview.mid = #{mid}
        </if>
        <if test="sortType != null">
            order by ${sortType}
        </if>
    </select>

    <select id="selectLongReviewByReview_id" parameterType="Integer" resultMap="LongReview">
        select *from longreview, bili_user, stat
        where bili_user.mid = longreview.mid
        and stat.article_id = longreview.article_id
        and longreview.review_id = #{review_id}
    </select>

    <select id="selectLatestReviewByMedia_id" parameterType="Integer" resultType="com.zfg.learn.model.po.LongReview">
        select  *from longreview
        where media_id = #{media_id}
        order by mtime DESC limit 1
    </select>

    <select id="selectReviewQuantityByMedia_id" parameterType="Integer" resultType="Integer">
        select count(*)from longreview
        where media_id = #{media_id}
    </select>

    <select id="selectReviewQuantityByMid" parameterType="Integer" resultType="Integer">
        select count(*)from longreview
        where mid = #{mid}
    </select>

    <insert id="insertLongReview" parameterType="com.zfg.learn.model.po.LongReview">
        insert into longreview
        (article_id, content, ctime, media_id, mid, mtime, progress, review_id, score, title, url)
        values (#{article_id}, #{content}, #{ctime}, #{media_id}, #{mid}, #{mtime}, #{progress}, #{review_id}, #{score}, #{title}, #{url})
    </insert>

    <insert id="insertLongReviewList" parameterType="java.util.List">
        insert into longreview
        (article_id, content, ctime, media_id, mid, mtime, progress, review_id, score, title, url)
        values
        <foreach item="review" separator="," collection="reviewList">
            (
            #{review.article_id},
            #{review.content},
            #{review.ctime},
            #{review.media_id},
            #{review.mid},
            #{review.mtime},
            #{review.progress},
            #{review.review_id},
            #{review.score},
            #{review.title},
            #{review.url}
            )
        </foreach>
    </insert>

    <update id="updateContentByReview_id" parameterType="com.zfg.learn.model.po.LongReview">
        update longreview
        set content = #{content}, mtime = #{mtime}
        where review_id = #{review_id}
    </update>

    <delete id="deleteLongReviewByReview_id" parameterType="Integer">
        delete from longreview where review_id = ${review_id}
    </delete>
</mapper>
