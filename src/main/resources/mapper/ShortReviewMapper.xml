<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.zfg.learn.dao.ShortReviewMapper">
    <resultMap id="ShortReview" type="com.zfg.learn.model.po.ShortReview">
        <id property="review_id" column="review_id"></id>
        <result property="content" column="content"></result>
        <result property="ctime" column="ctime"></result>
        <result property="media_id" column="media_id"></result>
        <result property="mid" column="mid"></result>
        <result property="mtime" column="mtime"></result>
        <result property="progress" column="progress"></result>
        <result property="score" column="score"></result>
        <association property="animation" javaType="com.zfg.learn.model.po.Animation">
            <result property="title" column="title"></result>
        </association>
        <association property="author" javaType="com.zfg.learn.model.po.BiliUser">
            <id property="mid" column="mid"></id>
            <result property="avatar" column="avatar"></result>
            <result property="uname" column="uname"></result>
        </association>
        <association property="stat" javaType="com.zfg.learn.model.po.Stat">
            <result property="likes" column="likes"></result>
            <result property="reply" column="reply"></result>
        </association>
    </resultMap>

    <!--取代pagehelper自带的性能低下的查询语句-->
    <select id="selectReviewByMedia_id_COUNT" resultType="Long">
        select count(*)from shortreview
        where shortreview.media_id = #{media_id}
        <if test="score != null">
            and shortreview.score = #{score}
        </if>
    </select>

    <select id="selectReviewByMedia_id" resultMap="ShortReview">
        select shortreview.*, bili_user.*, stat.*
        from shortreview
        left join bili_user on shortreview.mid = bili_user.mid
        left join stat on shortreview.review_id = stat.review_id
        where shortreview.media_id = #{media_id}
        <if test="score != null">
            and shortreview.score = #{score}
        </if>
        <if test="sortType != null">
            <if test="sortType == 'stat.LIKES DESC' ">
            and stat.likes > 50
            </if>
            order by ${sortType}
        </if>
    </select>

    <!--取代pagehelper自带的性能低下的查询语句-->
    <select id="selectReviewByKeyWord_COUNT" resultType="Long">
        <bind name="keyword" value="'%'+keyword+'%'"/>
        select count(*)from shortreview
        where shortreview.media_id = #{media_id}
        <if test="keyword != null">
            and   shortreview.content like #{keyword}
        </if>
    </select>

    <select id="selectReviewByKeyWord" resultMap="ShortReview">
        <bind name="keyword" value="'%'+keyword+'%'"/>
        select shortreview.*, bili_user.*, stat.*
        from shortreview
        left join bili_user on shortreview.mid = bili_user.mid
        left join stat on shortreview.review_id = stat.review_id
        where shortreview.media_id = #{media_id}
        <if test="score != null">
            and shortreview.score = #{score}
        </if>
        <if test="keyword != null">
            and shortreview.content like #{keyword}
        </if>
        <if test="sortType != null">
            <if test="sortType == 'stat.LIKES DESC' ">
                and stat.likes > 50
            </if>
            order by ${sortType}
        </if>
    </select>

    <!--取代pagehelper自带的性能低下的查询语句-->
    <select id="selectReviewByMid_COUNT" resultType="Long">
        select count(*)from shortreview
        <if test="mid != null">
            where  shortreview.mid = #{mid}
        </if>
    </select>

    <select id="selectReviewByMid" resultMap="ShortReview">
        select shortreview.*, bili_user.*, stat.*, animation.title
        from shortreview, bili_user, stat, animation
        where  shortreview.mid = bili_user.mid
        and    shortreview.review_id = stat.review_id
        and  shortreview.media_id = animation.media_id
        <if test="mid != null">
            and   shortreview.mid = #{mid}
        </if>
        <if test="sortType != null">
            order by ${sortType}
        </if>
    </select>

    <select id="findShortReviewByMediaId" parameterType="Integer" resultType="com.zfg.learn.model.po.ShortReview">
        select *from shortreview
        where media_id = #{media_id}
    </select>

    <select id="selectShortReviewByReview_id" parameterType="Integer" resultMap="ShortReview">
        select *from shortreview, bili_user, stat
        where bili_user.mid = shortreview.mid
        and stat.review_id = shortreview.review_id
        and shortreview.review_id = #{review_id}
    </select>

    <select id="selectAllReview_id" resultType="Integer">
        select review_id from shortreview
    </select>

    <select id="selectLatestReviewByMedia_id" parameterType="Integer" resultType="com.zfg.learn.model.po.ShortReview">
        select  *from shortreview
        where media_id = #{media_id}
        order by mtime DESC limit 1
    </select>

    <select id="selectReviewByMtime" parameterType="Long" resultType="com.zfg.learn.model.po.ShortReview">
        select  *from shortreview
        where mtime >= #{mtime}
    </select>

    <select id="selectReviewQuantityByMedia_id" parameterType="Integer" resultType="Integer">
        select count(*)from shortreview
        where media_id = #{media_id}
    </select>

    <select id="selectReviewQuantityByMid" parameterType="Integer" resultType="Integer">
        select count(*)from shortreview
        where mid = #{mid}
    </select>

    <insert id="insertShortReview" parameterType="com.zfg.learn.model.po.ShortReview">
        insert into shortreview
        (content, ctime, media_id, mid, mtime, progress, review_id, score)
        values (#{content}, #{ctime}, #{media_id}, #{mid}, #{mtime}, #{progress}, #{review_id}, #{score})
    </insert>

    <insert id="insertShortReviewList" parameterType="java.util.List">
        insert into shortreview
        (content, ctime, media_id, mid, mtime, progress, review_id, score)
        values
        <foreach item="review" separator="," collection="reviewList">
            (
                #{review.content},
                #{review.ctime},
                #{review.media_id},
                #{review.mid},
                #{review.mtime},
                #{review.progress},
                #{review.review_id},
                #{review.score}
            )
        </foreach>
    </insert>

    <update id="updateContentByReview_id" parameterType="com.zfg.learn.model.po.ShortReview">
        update shortreview
        set content = #{content}, mtime = #{mtime}
        where review_id = #{review_id}
    </update>

    <delete id="deleteShortReviewByReview_id" parameterType="Integer">
        delete from shortreview where review_id = ${review_id}
    </delete>

    <delete id="deleteShortReviewByMedia_id" parameterType="Integer">
        delete from shortreview where media_id = ${media_id}
    </delete>
</mapper>
